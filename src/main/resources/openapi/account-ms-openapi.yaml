openapi: 3.0.3
info:
  title: AccountMS API
  version: 1.0.0
  description: API reactiva para gestión de cuentas (WebFlux + MongoDB Reactivo)
servers:
  - url: http://localhost:8081
tags:
  - name: Cuentas
    description: Operaciones sobre cuentas

paths:
  /cuentas:
    get:
      tags: [Cuentas]
      operationId: listAccounts
      summary: Listar todas las cuentas
      responses:
        '200':
          description: Lista de cuentas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags: [Cuentas]
      operationId: createAccount
      summary: Crear una cuenta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
            examples:
              ejemplo:
                value:
                  initialBalance: 100.00
                  accountType: SAVINGS
      responses:
        '201':
          description: Cuenta creada
          headers:
            Location:
              description: URL del recurso creado
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '503':
          description: ClientMS no disponible (falló la validación del cliente)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cuentas/{id}:
    get:
      tags: [Cuentas]
      operationId: getAccountById
      summary: Obtener cuenta por ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la cuenta
          schema: { type: string }
      responses:
        '200':
          description: Cuenta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags: [Cuentas]
      operationId: updateAccount
      summary: Actualizar estado 'active' (reemplazo completo)
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountPutRequest'
            examples:
              activar: { value: { active: true } }
              desactivar: { value: { active: false } }
      responses:
        '200':
          description: Cuenta actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags: [Cuentas]
      operationId: patchAccount
      summary: Actualización parcial del campo 'active'
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountPatchRequest'
            examples:
              ejemplo: { value: { active: false } }
      responses:
        '200':
          description: Cuenta actualizada parcialmente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags: [Cuentas]
      operationId: deleteAccount
      summary: Eliminar cuenta (solo si el saldo es 0.00)
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        '204':
          description: Eliminada
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: No permitido si el saldo es distinto de 0.00
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                saldoNoCero:
                  value:
                    timestamp: "2025-09-07T10:15:30Z"
                    status: 409
                    error: "Solicitud incorrecta"
                    message: "No se puede eliminar la cuenta: el saldo debe ser 0.00"
                    path: "/cuentas/66ea0000000000000000baaa"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /cuentas/cliente/{clientId}:
    get:
      tags: [Cuentas]
      operationId: listAccountsByClient
      summary: Listar cuentas por cliente
      parameters:
        - name: clientId
          in: path
          required: true
          description: ID del cliente (se valida en ClientMS)
          schema: { type: string }
      responses:
        '200':
          description: Cuentas del cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Cliente no existe o identificador inválido (según validación en ClientMS)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                inexistente:
                  value:
                    timestamp: "2025-09-07T10:15:30Z"
                    status: 400
                    error: "Solicitud incorrecta"
                    message: "El cliente no existe"
                    path: "/cuentas/cliente/66ea0000000000000000a111"
        '503':
          description: ClientMS no disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    AccountResponse:
      type: object
      properties:
        id:
          type: string
          example: "66ea0000000000000000baaa"
        accountNumber:
          type: string
          example: "SV-123456"
        balance:
          type: number
          format: double
          example: 100.00
        type:
          $ref: '#/components/schemas/AccountType'
        clientId:
          type: string
          example: "66ea0000000000000000a111"
        active:
          type: boolean
          example: true
      required: [id, accountNumber, balance, type, clientId, active]

    CreateAccountRequest:
      type: object
      properties:
        clientId:
          type: string
          description: Identificador del cliente (se valida vía ClientMS)
          example: "66ea0000000000000000a111"
        initialBalance:
          type: number
          format: double
          minimum: 0
          description: Saldo inicial (opcional)
          example: 100.00
        accountType:
          $ref: '#/components/schemas/AccountType'
      required: [clientId, accountType]

    UpdateAccountPutRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Estado de la cuenta
          example: true
      required: [active]

    UpdateAccountPatchRequest:
      type: object
      properties:
        active:
          type: boolean
          description: Estado de la cuenta
          example: false
      # PATCH: sin "required"

    ApiError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-09-07T10:15:30Z"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "Solicitud incorrecta"
        message:
          type: string
          example: "Hay errores de validación en el cuerpo enviado"
        path:
          type: string
          example: "/cuentas/123"
        fieldErrors:
          type: object
          additionalProperties:
            type: string
          example:
            active: "no debe ser nulo"

    AccountType:
      type: string
      enum: [SAVINGS, CHECKING]

  responses:
    BadRequest:
      description: Solicitud inválida (validaciones, JSON inválido, etc.)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Conflict:
      description: Conflicto (duplicados, reglas de negocio)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    InternalServerError:
      description: Error inesperado del servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
